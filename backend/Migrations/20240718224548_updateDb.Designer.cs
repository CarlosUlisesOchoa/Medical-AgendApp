// <auto-generated />
using System;
using AgendApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendApp.Migrations
{
    [DbContext(typeof(AgendappDbContext))]
    [Migration("20240718224548_updateDb")]
    partial class updateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendApp.Models.Administradore", b =>
                {
                    b.Property<int>("IdAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAdministrador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdministrador"));

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdAdministrador")
                        .HasName("PK__administ__EBE80EA1C513330A");

                    b.HasIndex("IdUsuario");

                    b.ToTable("administradores", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Categoriasmedica", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__categori__8A3D240C6A0CD8D2");

                    b.ToTable("categoriasmedicas", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCita");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCita"));

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hora");

                    b.Property<int?>("IdMedico")
                        .HasColumnType("int")
                        .HasColumnName("idMedico");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    b.Property<string>("MotivoConsulta")
                        .HasColumnType("text")
                        .HasColumnName("motivoConsulta");

                    b.HasKey("IdCita")
                        .HasName("PK__citas__814F31266CEE0F02");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPaciente");

                    b.ToTable("citas", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idConsulta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConsulta"));

                    b.Property<string>("Diagnostico")
                        .HasColumnType("text")
                        .HasColumnName("diagnostico");

                    b.Property<int?>("IdCita")
                        .HasColumnType("int")
                        .HasColumnName("idCita");

                    b.HasKey("IdConsulta")
                        .HasName("PK__consulta__CA9C61F50DC0E162");

                    b.HasIndex("IdCita");

                    b.ToTable("consultas", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("Rango")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rango");

                    b.HasKey("IdHorario")
                        .HasName("PK__horarios__DE60F33AAE123C59");

                    b.ToTable("horarios", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Medico", b =>
                {
                    b.Property<int>("IdMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMedico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedico"));

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int?>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("idHorario");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdMedico")
                        .HasName("PK__medicos__4E03DEBA7E72BCC2");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("medicos", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPaciente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("IdPaciente")
                        .HasName("PK__paciente__F48A08F29757CBC8");

                    b.HasIndex("IdUsuario");

                    b.ToTable("pacientes", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK__roles__3C872F7606B68615");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contrasenia")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contrasenia");

                    b.Property<string>("Dni")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK__usuarios__645723A62AB3AA62");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Email" }, "UQ__usuarios__AB6E61648D3326F8")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Dni" }, "UQ__usuarios__D87608A71FB02739")
                        .IsUnique()
                        .HasFilter("[dni] IS NOT NULL");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("AgendApp.Models.Administradore", b =>
                {
                    b.HasOne("AgendApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Administradores")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__administr__idUsu__48CFD27E");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Cita", b =>
                {
                    b.HasOne("AgendApp.Models.Medico", "IdMedicoNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdMedico")
                        .HasConstraintName("FK__citas__idMedico__4AB81AF0");

                    b.HasOne("AgendApp.Models.Paciente", "IdPacienteNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK__citas__idPacient__49C3F6B7");

                    b.Navigation("IdMedicoNavigation");

                    b.Navigation("IdPacienteNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Consulta", b =>
                {
                    b.HasOne("AgendApp.Models.Cita", "IdCitaNavigation")
                        .WithMany("Consulta")
                        .HasForeignKey("IdCita")
                        .HasConstraintName("FK__consultas__idCit__4BAC3F29");

                    b.Navigation("IdCitaNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Medico", b =>
                {
                    b.HasOne("AgendApp.Models.Categoriasmedica", "IdCategoriaNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__medicos__idCateg__4D94879B");

                    b.HasOne("AgendApp.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("IdHorario")
                        .HasConstraintName("FK__medicos__idHorar__4E88ABD4");

                    b.HasOne("AgendApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Medicos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__medicos__idUsuar__4CA06362");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Paciente", b =>
                {
                    b.HasOne("AgendApp.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__pacientes__idUsu__4F7CD00D");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Usuario", b =>
                {
                    b.HasOne("AgendApp.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__usuarios__idRol__5070F446");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AgendApp.Models.Categoriasmedica", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("AgendApp.Models.Cita", b =>
                {
                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("AgendApp.Models.Horario", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("AgendApp.Models.Medico", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AgendApp.Models.Paciente", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AgendApp.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AgendApp.Models.Usuario", b =>
                {
                    b.Navigation("Administradores");

                    b.Navigation("Medicos");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
